public class AccountHelper {
    public static void SimpleInsert(list<Account> x){
        for(Account a:x){
              a.site='www.bilgi.com';
              a.fax='+90 456 34 56';
              a.Name=a.Name.toUpperCase();
          } 
    }
    public static void ValidationRule(list<Account> x){
        for(Account a:x){
            if(String.isBlank(a.phone)){
                a.addError('Phone Number is Required');
            }
        }
    }
    public static void ContactCreate(List<Account> x){
        List<Contact> a=New List<Contact>();
        for(Account y:x){                        //Account kadar(trigger.New) dönüyor ama kontact oluşturuyor.
        Contact b=New Contact();
        b.LastName='Helper Contact Test';
        b.AccountId=y.Id;
        a.add(b);                        //for bitiş
        }
        Insert a;
    }
    public static void updateControl(List<Account> x){
        for(Account a:x){
            if(String.isBlank(a.phone)){
                a.Phone.addError('You cannot obmit phone field if you want to change it, please enter a new value.');
                    
                
            }
        }
    }
}




      trigger Merhaba on Account(before insert, after insert, before update,after update,
                           before delete, after delete, after undelete){//INSERT
  if(trigger.isInsert){
      if(trigger.isBefore){
          AccountHelper.SimpleInsert(trigger.new);  // Burada Helper Class ı çagırıyoruz.
          AccountHelper.ValidationRule(trigger.new);
    }else{
          AccountHelper.ContactCreate(trigger.new);
}
}//Update
      if(trigger.isUpdate){
      if(trigger.isBefore){
        System.debug('Update Before'); 
       AccountHelper.updateControl(trigger.new) ;  
      }else{
         System.debug('Update After');
       AccountHelper.updateControl(trigger.new) ;   
      }
  }else if(trigger.isDelete){//DELETE
       if(trigger.isBefore){
          System.debug('Before Delete is Running.');
      }else{
          System.debug('After Delete is Running');
      }
      
  }if(trigger.isUndelete){
      System.debug('After Undelete is running');
  }
                               
                           }




